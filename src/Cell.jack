class Cell {
    field boolean isMine;
    field boolean isRevealed;
    field boolean isFlagged;
    field int adjacentMines;
    field int X;
    field int Y;

    constructor Cell new(int i) {
        var int k;
        let k = 0;
        let isMine = false;
        let isRevealed = false;
        let isFlagged = false;
        let adjacentMines = 0;
        while(i > 9){
            let i = i - 10;
            let k = k + 1;
        }
        let X = i;
        let Y = k;
        return this;
    }

    method int GetX(){
        return X;
    }

    method void GetY(){
        return Y;
    }

    method boolean IsMine(){
        return isMine;
    }

    method boolean IsRevealed(){
        return isRevealed;
    }  

    method boolean IsFlagged(){
        return isFlagged;
    }

    method void PlaceMine(){
        let isMine = true;
        return;
    }

    method void RevealCell(){
        let isRevealed = true;
        return;
    }

    method void SetAdjasent(int count){
        let adjacentMines = count;
        return;
    }

    method int GetAdjasent(){
        return adjacentMines;
    }

    method void ChangeFlag(){
        let isFlagged = ~isFlagged;
        return;
    }
}
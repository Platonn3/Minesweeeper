class Game {
    field Board board;

    constructor Game new(){
        let board = Board.new();
        do UI.RenderMainGrid();

        return this;
    }

    method void GameLoop(){
        var boolean running;
        var char key;
        var int x,y;
        var Cell cell;
        let running = true;
        while (running){
            let key = Keyboard.keyPressed();
            if (key = 130) {
                do board.MoveCursorX(-1);
                do UI.RenderCoordiantes(board.GetCursorX(), board.GetCursorY());
            }
            if (key = 132) {
                do board.MoveCursorX(1);
                do UI.RenderCoordiantes(board.GetCursorX(), board.GetCursorY());
            }  
            if (key = 131) {
                do board.MoveCursorY(-1);
                do UI.RenderCoordiantes(board.GetCursorX(), board.GetCursorY());
            }
            if (key = 133) { 
                do board.MoveCursorY(1);
                do UI.RenderCoordiantes(board.GetCursorX(), board.GetCursorY());
            }
            if (key = 32) {
                do board.RevealCell(board.GetCursorX(), board.GetCursorY());
                do board.RenderCell(board.GetCursorX(),  board.GetCursorY());
            }
            if (key = 128) {
                do board.ToggleFlag(board.GetCursorX(), board.GetCursorY());
                do board.RenderCell(board.GetCursorX(),  board.GetCursorY());
            }
            let running = CheckGameStatus();
        }
        return;
    }

    method boolean CheckGameStatus() {
        if(board.IsWin()){
            do Output.moveCursor(15, 50);
            do Output.printString("You Win! :)");
            return false;
        }
        if(board.IsLoss()){
            do Output.moveCursor(15, 50);
            do Output.printString("You Lose! :(");
            do Output.moveCursor(16, 50);
            do Output.printString("Game Over!");
            return false;
        }
        return true;
    }
}
